JobId=865055 JobName=script.sh
   UserId=kanderer29(4373) GroupId=macke(4017) MCS_label=N/A
   Priority=63302 Nice=0 Account=macke QOS=normal
   JobState=RUNNING Reason=None Dependency=(null)
   Requeue=1 Restarts=0 BatchFlag=1 Reboot=0 ExitCode=0:0
   RunTime=00:00:01 TimeLimit=03:00:00 TimeMin=N/A
   SubmitTime=2021-11-23T20:29:12 EligibleTime=2021-11-23T20:29:12
   AccrueTime=2021-11-23T20:29:13
   StartTime=2021-11-23T20:29:13 EndTime=2021-11-23T23:29:13 Deadline=N/A
   PreemptEligibleTime=2021-11-23T20:30:13 PreemptTime=None
   SuspendTime=None SecsPreSuspend=0 LastSchedEval=2021-11-23T20:29:13
   Partition=cpu-short AllocNode:Sid=bg-slurmb-login1:30043
   ReqNodeList=(null) ExcNodeList=(null)
   NodeList=slurm-cpu-hm-3
   BatchHost=slurm-cpu-hm-3
   NumNodes=1 NumCPUs=64 NumTasks=1 CPUs/Task=64 ReqB:S:C:T=0:0:*:*
   TRES=cpu=64,mem=50G,node=1,billing=13
   Socks/Node=* NtasksPerN:B:S:C=0:0:*:* CoreSpec=*
   MinCPUsNode=64 MinMemoryNode=50G MinTmpDiskNode=0
   Features=(null) DelayBoot=00:00:00
   OverSubscribe=OK Contiguous=0 Licenses=(null) Network=(null)
   Command=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/script.sh
   WorkDir=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code
   StdErr=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/hostname_865055.err
   StdIn=/dev/null
   StdOut=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/hostname_865055.out
   Power=
   MailUser=k.anderer@t-online.de MailType=END

3
x_without tensor([[ 3.0071,  3.0250,  3.0428,  ...,  4.1351,  4.1223,  4.1095],
        [ 3.6339,  3.6608,  3.6880,  ...,  1.7005,  1.6933,  1.6861],
        [ 3.1835,  3.2056,  3.2277,  ...,  3.7413,  3.7279,  3.7145],
        ...,
        [ 0.1382,  0.1445,  0.1509,  ...,  3.3883,  3.3771,  3.3659],
        [-0.5321, -0.5323, -0.5323,  ...,  3.0520,  3.0408,  3.0297],
        [-0.2424, -0.2390, -0.2355,  ...,  3.9019,  3.8902,  3.8785]])
tensor([3.0071, 3.0250, 3.0428,  ..., 4.1351, 4.1223, 4.1095])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.6339, 3.6608, 3.6880,  ..., 1.7005, 1.6933, 1.6861])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.1835, 3.2056, 3.2277,  ..., 3.7413, 3.7279, 3.7145])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.2484, 3.2641, 3.2799,  ..., 6.4811, 6.4609, 6.4407])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.1482, 0.1575, 0.1668,  ..., 4.2909, 4.2764, 4.2619])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.8119, 5.8487, 5.8859,  ..., 0.8988, 0.8950, 0.8913])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.7131, 1.7302, 1.7473,  ..., 3.8145, 3.8020, 3.7895])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.4241, -0.4224, -0.4206,  ...,  3.0392,  3.0303,  3.0214])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.6136, 3.6366, 3.6597,  ..., 5.8076, 5.7847, 5.7618])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.1087, 0.1137, 0.1187,  ..., 3.0458, 3.0369, 3.0280])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.3650, 5.3904, 5.4159,  ..., 1.4596, 1.4544, 1.4492])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.0131, 0.0179, 0.0228,  ..., 4.1876, 4.1723, 4.1570])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([9.7779, 9.8279, 9.8778,  ..., 3.5574, 3.5446, 3.5319])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.1229, 6.1495, 6.1759,  ..., 2.6054, 2.5968, 2.5882])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([8.0789, 8.1137, 8.1488,  ..., 3.5407, 3.5283, 3.5160])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.7171, 0.7262, 0.7354,  ..., 3.4009, 3.3916, 3.3824])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.3881, -0.3866, -0.3851,  ...,  1.4486,  1.4430,  1.4375])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.2749, 0.2798, 0.2848,  ..., 3.6172, 3.6040, 3.5908])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([7.6634, 7.6977, 7.7321,  ..., 3.7730, 3.7603, 3.7476])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.3380, 3.3593, 3.3805,  ..., 2.9137, 2.9024, 2.8912])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.7921, 6.8194, 6.8470,  ..., 1.6031, 1.5966, 1.5901])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.8799, 4.8989, 4.9177,  ..., 1.4957, 1.4906, 1.4855])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.4794, -0.4784, -0.4774,  ...,  3.7102,  3.6979,  3.6855])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5213, -0.5212, -0.5211,  ...,  4.5909,  4.5750,  4.5590])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.1216, 2.1303, 2.1389,  ..., 4.2879, 4.2747, 4.2615])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([9.1016, 9.1419, 9.1825,  ..., 6.9891, 6.9706, 6.9521])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.0223, 2.0398, 2.0572,  ..., 3.4441, 3.4339, 3.4237])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2637, -0.2589, -0.2542,  ...,  3.6383,  3.6254,  3.6124])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.6126, -0.6110, -0.6094,  ...,  5.8731,  5.8550,  5.8369])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.4783, 3.5005, 3.5227,  ..., 6.2342, 6.2148, 6.1954])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.3668, 0.3724, 0.3780,  ..., 5.9992, 5.9802, 5.9613])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.4133, -0.4117, -0.4101,  ...,  4.7762,  4.7617,  4.7471])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.0309, 6.0511, 6.0713,  ..., 1.9139, 1.9067, 1.8995])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.3996, -0.3962, -0.3928,  ...,  3.7554,  3.7443,  3.7332])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5413, -0.5413, -0.5414,  ...,  2.6201,  2.6100,  2.5998])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ 0.0301,  0.0347,  0.0393,  ..., 10.1731, 10.1403, 10.1076])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.1686, 0.1765, 0.1845,  ..., 4.1191, 4.1065, 4.0939])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.3190, 1.3294, 1.3399,  ..., 0.9215, 0.9181, 0.9147])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.9437, 0.9573, 0.9710,  ..., 2.1865, 2.1788, 2.1711])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.6168, 4.6353, 4.6536,  ..., 5.3060, 5.2898, 5.2737])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.3597, -0.3582, -0.3566,  ...,  6.7255,  6.7043,  6.6832])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.9012, 2.9224, 2.9436,  ..., 6.1924, 6.1732, 6.1540])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.1453, 6.1692, 6.1931,  ..., 6.6550, 6.6343, 6.6136])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.6403, 2.6493, 2.6581,  ..., 6.2927, 6.2730, 6.2534])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.5626, 4.5928, 4.6232,  ..., 5.9570, 5.9385, 5.9199])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.0053, 1.0192, 1.0331,  ..., 2.5212, 2.5128, 2.5045])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.1822, 5.2105, 5.2389,  ..., 7.4840, 7.4603, 7.4368])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.1353, 6.1502, 6.1653,  ..., 3.6343, 3.6235, 3.6127])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([7.9901, 8.0264, 8.0627,  ..., 3.3216, 3.3099, 3.2982])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.3892, 0.3966, 0.4041,  ..., 5.9736, 5.9552, 5.9368])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.0349, 4.0517, 4.0688,  ..., 1.0861, 1.0819, 1.0777])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.3863, 4.4027, 4.4193,  ..., 2.6473, 2.6381, 2.6289])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.5283, 0.5367, 0.5451,  ..., 4.2945, 4.2790, 4.2635])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.3045, 6.3358, 6.3674,  ..., 3.7001, 3.6892, 3.6783])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5570, -0.5571, -0.5572,  ...,  7.1977,  7.1751,  7.1524])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.3680, 4.3832, 4.3981,  ..., 3.4814, 3.4704, 3.4594])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.7341, 1.7492, 1.7642,  ..., 5.6517, 5.6329, 5.6141])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([9.5364, 9.5735, 9.6108,  ..., 5.4029, 5.3839, 5.3649])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.5109, 0.5171, 0.5232,  ..., 6.3598, 6.3392, 6.3186])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.8417, 4.8622, 4.8831,  ..., 3.9570, 3.9434, 3.9298])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.1642, 5.1851, 5.2060,  ..., 2.8075, 2.7977, 2.7879])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.1675, 1.1760, 1.1845,  ..., 5.1339, 5.1165, 5.0991])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.7101, 1.7262, 1.7425,  ..., 5.5682, 5.5511, 5.5339])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.0631, 2.0779, 2.0926,  ..., 2.1930, 2.1861, 2.1792])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.4135, -0.4127, -0.4119,  ...,  4.0472,  4.0326,  4.0180])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.4888, 1.4989, 1.5090,  ..., 1.5776, 1.5715, 1.5654])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([10.0573, 10.0997, 10.1421,  ...,  7.2919,  7.2690,  7.2462])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.0817, 6.1126, 6.1435,  ..., 2.2032, 2.1959, 2.1886])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.0566, -0.0527, -0.0488,  ...,  4.4363,  4.4227,  4.4092])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.7960, 6.8261, 6.8560,  ..., 5.2388, 5.2200, 5.2013])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.6220, 1.6367, 1.6515,  ..., 4.4101, 4.3968, 4.3836])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2492, -0.2440, -0.2386,  ...,  1.4345,  1.4302,  1.4259])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.1275, -0.1250, -0.1224,  ...,  3.5915,  3.5789,  3.5663])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5957, -0.5962, -0.5967,  ...,  2.9800,  2.9699,  2.9599])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([8.7743, 8.8080, 8.8417,  ..., 5.2275, 5.2115, 5.1955])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.5011, 5.5319, 5.5628,  ..., 2.3759, 2.3674, 2.3589])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.8230, 0.8343, 0.8457,  ..., 2.2613, 2.2530, 2.2447])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.4517, 3.4662, 3.4806,  ..., 4.2179, 4.2032, 4.1886])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.8698, 4.9012, 4.9327,  ..., 3.0089, 2.9999, 2.9908])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.7791, 0.7903, 0.8015,  ..., 3.8797, 3.8673, 3.8549])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2520, -0.2489, -0.2458,  ...,  1.2632,  1.2584,  1.2537])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.4024, 4.4150, 4.4277,  ..., 2.8376, 2.8273, 2.8169])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.8559, 1.8710, 1.8860,  ..., 3.4312, 3.4205, 3.4098])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.0573, 0.0622, 0.0672,  ..., 4.2266, 4.2138, 4.2010])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.9251, 1.9378, 1.9504,  ..., 6.7741, 6.7529, 6.7317])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([7.5557, 7.5966, 7.6376,  ..., 3.5841, 3.5739, 3.5636])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5814, -0.5820, -0.5826,  ...,  4.0249,  4.0107,  3.9965])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([6.0764, 6.0989, 6.1211,  ..., 4.0736, 4.0599, 4.0462])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.9494, 4.9791, 5.0089,  ..., 3.2275, 3.2175, 3.2075])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.3703, -0.3677, -0.3651,  ...,  6.9999,  6.9776,  6.9552])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5323, -0.5324, -0.5325,  ...,  4.7978,  4.7816,  4.7653])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([11.0891, 11.1449, 11.2010,  ...,  2.7050,  2.6962,  2.6875])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([8.8947, 8.9324, 8.9702,  ..., 3.8920, 3.8804, 3.8689])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([8.8022, 8.8453, 8.8885,  ..., 5.7324, 5.7130, 5.6936])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2713, -0.2680, -0.2647,  ...,  8.8884,  8.8601,  8.8318])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.7624, 0.7717, 0.7811,  ..., 1.5462, 1.5409, 1.5356])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.1264, 0.1320, 0.1376,  ..., 6.0021, 5.9778, 5.9535])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.1382, 0.1445, 0.1509,  ..., 3.3883, 3.3771, 3.3659])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5321, -0.5323, -0.5323,  ...,  3.0520,  3.0408,  3.0297])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2424, -0.2390, -0.2355,  ...,  3.9019,  3.8902,  3.8785])
torch.Size([6801])
<class 'torch.Tensor'>
sum stats <class 'torch.Tensor'>
tensor([[  53.1001,  -72.5251,   28.6836, 1092.0000, 2503.0000, 1916.0000,
            0.0000,    0.0000,    0.0000],
        [  50.1537,  -35.3515,   35.4781, 1489.0000, 2448.0000, 1927.0000,
            0.0000,    0.0000,    0.0000],
        [  50.2883,  -45.5774,   41.7344, 1178.0000, 2838.0000, 2146.0000,
            0.0000,    0.0000,    0.0000],
        [  50.6453,  -57.9295,   40.8322, 1520.0000, 3078.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  54.4350,  -55.0483,   45.7848, 1587.0000, 3283.0000, 2580.0000,
            0.0000,    0.0000,    0.0000],
        [  41.9270,  -66.5739,   30.7076, 1334.0000, 2355.0000, 1690.0000,
            0.0000,    0.0000,    0.0000],
        [  49.4506,  -34.0410,   36.5855, 1429.0000, 3301.0000, 2414.0000,
            0.0000,    0.0000,    0.0000],
        [  45.3008,  -30.9905,   43.2962, 1631.0000, 2429.0000, 1805.0000,
            0.0000,    0.0000,    0.0000],
        [  54.9124,  -34.8950,   40.1219, 1144.0000, 3262.0000, 2570.0000,
            0.0000,    0.0000,    0.0000],
        [  46.9671,  -30.7168,   39.9621, 1489.0000, 2425.0000, 1915.0000,
            0.0000,    0.0000,    0.0000],
        [  48.9590,  -43.3811,   31.8195, 1097.0000, 2304.0000, 1519.0000,
            0.0000,    0.0000,    0.0000],
        [  33.9988,  -40.7222,   41.9363, 1500.0000, 2920.0000, 2414.0000,
            0.0000,    0.0000,    0.0000],
        [  39.2984,  -34.8236,   37.0247, 1673.0000, 2598.0000, 2065.0000,
            0.0000,    0.0000,    0.0000],
        [  44.0111,  -58.0634,   33.7907, 1132.0000, 2498.0000, 1841.0000,
            0.0000,    0.0000,    0.0000],
        [  44.3753,  -55.2223,   38.0065,  880.0000, 3284.0000, 2606.0000,
            0.0000,    0.0000,    0.0000],
        [  58.5735,  -39.8907,   37.8810, 1251.0000, 2398.0000, 1770.0000,
            0.0000,    0.0000,    0.0000],
        [  45.6302,  -37.4081,   41.8874, 1537.0000, 2441.0000, 1825.0000,
            0.0000,    0.0000,    0.0000],
        [  52.7604,  -54.8375,   39.8778, 1479.0000, 3057.0000, 2396.0000,
            0.0000,    0.0000,    0.0000],
        [  42.5749,  -40.7295,   35.5176,  966.0000, 3183.0000, 2593.0000,
            0.0000,    0.0000,    0.0000],
        [  46.8035,  -42.0800,   35.3220, 1431.0000, 2553.0000, 1900.0000,
            0.0000,    0.0000,    0.0000],
        [  45.3723,  -44.1466,   36.1893,  953.0000, 2310.0000, 1680.0000,
            0.0000,    0.0000,    0.0000],
        [  54.4215,  -33.9662,   36.3995, 1242.0000, 2235.0000, 1815.0000,
            0.0000,    0.0000,    0.0000],
        [  56.3927,  -42.0489,   55.8352, 2024.0000, 3167.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  50.8225,  -40.4688,   48.4424, 1863.0000, 3417.0000, 2739.0000,
            0.0000,    0.0000,    0.0000],
        [  54.3332,  -44.9202,   38.8705, 1131.0000, 3363.0000, 2487.0000,
            0.0000,    0.0000,    0.0000],
        [  44.5264,  -51.0820,   32.4545,  822.0000, 2979.0000, 2391.0000,
            0.0000,    0.0000,    0.0000],
        [  54.0824,  -40.0539,   42.0029, 1479.0000, 2594.0000, 2038.0000,
            0.0000,    0.0000,    0.0000],
        [  52.1121,  -49.6586,   41.7704, 1502.0000, 2771.0000, 2116.0000,
            0.0000,    0.0000,    0.0000],
        [  47.3223,  -48.8873,   41.4672, 1263.0000, 3041.0000, 2050.0000,
            0.0000,    0.0000,    0.0000],
        [  57.1348,  -47.0801,   56.6185, 2029.0000, 3097.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  48.7468,  -36.8634,   38.7570, 1753.0000, 2830.0000, 2233.0000,
            0.0000,    0.0000,    0.0000],
        [  60.9108,  -26.5626,   53.7911, 1592.0000, 2659.0000, 1838.0000,
            0.0000,    0.0000,    0.0000],
        [  44.4352,  -54.1597,   36.9943, 1094.0000, 2488.0000, 1864.0000,
            0.0000,    0.0000,    0.0000],
        [  52.7492,  -49.5586,   41.7166, 1587.0000, 2649.0000, 1857.0000,
            0.0000,    0.0000,    0.0000],
        [  45.7719,  -40.3839,   42.5566, 1594.0000, 2421.0000, 1849.0000,
            0.0000,    0.0000,    0.0000],
        [  64.0301,  -51.4769,   59.2843, 1857.0000, 3457.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  55.1653,  -42.2603,   44.5019, 1571.0000, 3109.0000, 2367.0000,
            0.0000,    0.0000,    0.0000],
        [  53.4358,  -45.0328,   40.5167, 1212.0000, 2139.0000, 1518.0000,
            0.0000,    0.0000,    0.0000],
        [  41.8295,  -45.6158,   40.1829, 1559.0000, 2882.0000, 2319.0000,
            0.0000,    0.0000,    0.0000],
        [  50.1202,  -64.8931,   32.8453, 1301.0000, 2826.0000, 1960.0000,
            0.0000,    0.0000,    0.0000],
        [  56.0616,  -54.1699,   40.0043, 1481.0000, 3232.0000, 2684.0000,
            0.0000,    0.0000,    0.0000],
        [  41.8652,  -44.9660,   30.5057, 1341.0000, 3159.0000, 2575.0000,
            0.0000,    0.0000,    0.0000],
        [  44.1813,  -42.8670,   32.7079,  897.0000, 3033.0000, 2497.0000,
            0.0000,    0.0000,    0.0000],
        [  59.8660,  -38.7921,   43.6271, 1489.0000, 3117.0000, 2383.0000,
            0.0000,    0.0000,    0.0000],
        [  37.3551,  -57.0238,   32.3880, 1087.0000, 3150.0000,   47.0000,
            0.0000,    0.0000,    0.0000],
        [  49.3870,  -25.4659,   48.9777, 1409.0000, 2244.0000, 1517.0000,
            0.0000,    0.0000,    0.0000],
        [  41.4902,  -47.5931,   38.0976, 1588.0000, 3226.0000,  139.0000,
            0.0000,    0.0000,    0.0000],
        [  39.5638,  -41.1924,   43.2773, 1293.0000, 2523.0000, 1900.0000,
            0.0000,    0.0000,    0.0000],
        [  37.4632,  -51.6959,   41.0964, 1027.0000, 2941.0000, 2386.0000,
            0.0000,    0.0000,    0.0000],
        [  52.3627,  -46.8587,   41.9215, 1493.0000, 2863.0000, 1835.0000,
            0.0000,    0.0000,    0.0000],
        [  47.1216,  -40.6653,   33.3096, 1126.0000, 2380.0000, 1535.0000,
            0.0000,    0.0000,    0.0000],
        [  42.3959,  -62.3759,   39.5427, 1223.0000, 2765.0000, 2088.0000,
            0.0000,    0.0000,    0.0000],
        [  59.9099,  -74.9876,   53.1475, 1831.0000, 3296.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  46.9062,  -65.3367,   36.6478,  980.0000, 2765.0000, 2127.0000,
            0.0000,    0.0000,    0.0000],
        [  59.0573,  -42.8892,   45.0611, 1579.0000, 3301.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  59.5143,  -44.1280,   40.2168, 1473.0000, 2959.0000, 2288.0000,
            0.0000,    0.0000,    0.0000],
        [  44.5108,  -52.5166,   42.7829, 1168.0000, 3378.0000, 2699.0000,
            0.0000,    0.0000,    0.0000],
        [  33.8561,  -58.4419,   28.0005, 1637.0000, 3472.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  59.8060,  -43.9787,   47.2844, 1540.0000, 3515.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  37.9541,  -80.4902,   36.9440, 1416.0000, 3179.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  40.8195,  -64.0269,   36.3443, 1526.0000, 2773.0000, 2196.0000,
            0.0000,    0.0000,    0.0000],
        [  49.7520,  -47.6697,   38.5614, 1137.0000, 3283.0000, 2840.0000,
            0.0000,    0.0000,    0.0000],
        [  48.8039,  -39.5357,   42.0417, 1401.0000, 3225.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  52.7898,  -44.0965,   38.2499, 1268.0000, 2385.0000, 2173.0000,
            0.0000,    0.0000,    0.0000],
        [  56.0782,  -48.6625,   33.8421, 1450.0000, 2810.0000, 2181.0000,
            0.0000,    0.0000,    0.0000],
        [  49.6350,  -47.7761,   34.4907, 1174.0000, 2342.0000, 1902.0000,
            0.0000,    0.0000,    0.0000],
        [  35.4303,  -58.2348,   33.2539, 1960.0000, 3046.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  41.1210,  -50.9320,   34.5902, 1565.0000, 2762.0000, 2158.0000,
            0.0000,    0.0000,    0.0000],
        [  44.1616,  -46.3940,   44.1865, 2099.0000, 3192.0000,   10.0000,
            0.0000,    0.0000,    0.0000],
        [  38.1270,  -78.5990,   28.8632, 1021.0000, 3522.0000,  221.0000,
            0.0000,    0.0000,    0.0000],
        [  52.5645,  -37.7724,   41.7252, 1376.0000, 2681.0000, 1895.0000,
            0.0000,    0.0000,    0.0000],
        [  39.5780,  -43.1756,   38.1966, 1594.0000, 2329.0000, 2037.0000,
            0.0000,    0.0000,    0.0000],
        [  55.5248,  -33.5850,   47.7866, 1430.0000, 3025.0000, 2376.0000,
            0.0000,    0.0000,    0.0000],
        [  56.6609,  -35.3513,   41.8517, 1741.0000, 2738.0000, 2251.0000,
            0.0000,    0.0000,    0.0000],
        [  38.0638,  -42.2840,   35.6398, 1240.0000, 3018.0000, 2138.0000,
            0.0000,    0.0000,    0.0000],
        [  44.0003,  -41.9315,   38.0282,  916.0000, 2901.0000, 2356.0000,
            0.0000,    0.0000,    0.0000],
        [  41.9391,  -47.8127,   39.2448, 1373.0000, 2382.0000, 1728.0000,
            0.0000,    0.0000,    0.0000],
        [  41.2463,  -41.4194,   34.1318, 1322.0000, 3229.0000, 2632.0000,
            0.0000,    0.0000,    0.0000],
        [  47.7242,  -61.6226,   37.0699, 1434.0000, 2798.0000, 2288.0000,
            0.0000,    0.0000,    0.0000],
        [  43.5283,  -47.6111,   46.5105, 1216.0000, 3194.0000, 2430.0000,
            0.0000,    0.0000,    0.0000],
        [  47.6070,  -27.0055,   41.9172, 1432.0000, 2563.0000, 1829.0000,
            0.0000,    0.0000,    0.0000],
        [  40.3283,  -38.4941,   33.8289, 1207.0000, 2604.0000, 2033.0000,
            0.0000,    0.0000,    0.0000],
        [  53.7594,  -39.2905,   36.3720, 1146.0000, 2353.0000, 1704.0000,
            0.0000,    0.0000,    0.0000],
        [  49.9652,  -42.9182,   46.5460, 1460.0000, 2815.0000, 2117.0000,
            0.0000,    0.0000,    0.0000],
        [  68.7437,  -54.0468,   60.8379, 1765.0000, 3229.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  44.9826,  -50.3378,   31.0794,  943.0000, 2019.0000, 1461.0000,
            0.0000,    0.0000,    0.0000],
        [  55.2378,  -36.5190,   48.4779, 1616.0000, 3068.0000, 2449.0000,
            0.0000,    0.0000,    0.0000],
        [  44.0472,  -68.1093,   39.7961, 1139.0000, 3316.0000, 2690.0000,
            0.0000,    0.0000,    0.0000],
        [  48.1959,  -56.2495,   38.3748, 1077.0000, 3010.0000, 2261.0000,
            0.0000,    0.0000,    0.0000],
        [  60.7597,  -43.9463,   43.8713, 1177.0000, 3530.0000, 2866.0000,
            0.0000,    0.0000,    0.0000],
        [  61.3460,  -43.5882,   49.6355, 1489.0000, 3325.0000, 2720.0000,
            0.0000,    0.0000,    0.0000],
        [  43.0474,  -66.3289,   33.4356,  749.0000, 2459.0000, 2074.0000,
            0.0000,    0.0000,    0.0000],
        [  37.5661,  -37.9535,   37.5535, 1223.0000, 2318.0000, 1632.0000,
            0.0000,    0.0000,    0.0000],
        [  39.2991,  -70.3473,   34.7695, 1785.0000, 3278.0000,    0.0000,
            0.0000,    0.0000,    0.0000],
        [  44.1440,  -26.5614,   47.7304, 1670.0000, 3380.0000, 2842.0000,
            0.0000,    0.0000,    0.0000],
        [  44.5964,  -34.8726,   38.8840, 1311.0000, 2159.0000, 1544.0000,
            0.0000,    0.0000,    0.0000],
        [  51.8628,  -27.2181,   47.2740, 1642.0000, 2667.0000, 2036.0000,
            0.0000,    0.0000,    0.0000],
        [  54.4571,  -32.4173,   49.3416, 1733.0000, 2932.0000, 2278.0000,
            0.0000,    0.0000,    0.0000],
        [  55.9315,  -51.5055,   42.1630, 1677.0000, 3253.0000, 2558.0000,
            0.0000,    0.0000,    0.0000],
        [  58.2807,  -43.4941,   43.5059, 1537.0000, 3063.0000, 2081.0000,
            0.0000,    0.0000,    0.0000]])
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Neural network successfully converged after 97 epochs.
[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
3 params are investigated
joblib will run over 1 jobs
Loading custom mechanism files from /home/macke/kanderer29/.conda/envs/sbi_env/lib/python3.7/site-packages/hnn_core/mod/x86_64/.libs/libnrnmech.so
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:   55.1s remaining:    0.0s
[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:   55.1s finished
done
tensor([2.5693, 2.5882, 2.6071,  ..., 3.9598, 3.9460, 3.9323],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
torch.Size([1, 6])
tensor([2.5693, 2.5882, 2.6071,  ..., 3.9598, 3.9460, 3.9323],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
sum stats <class 'torch.Tensor'>
tensor([[  51.2342,  -32.5955,   43.2744, 1291.0000, 2783.0000, 2258.0000,
            0.0000,    0.0000,    0.0000]], dtype=torch.float64)
3 params are investigated
joblib will run over 1 jobs
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
3 params are investigated
joblib will run over 1 jobs
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
3 params are investigated
joblib will run over 1 jobs
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
[Parallel(n_jobs=64)]: Using backend MultiprocessingBackend with 64 concurrent workers.
[Parallel(n_jobs=64)]: Done   1 tasks      | elapsed:  1.8min
[Parallel(n_jobs=64)]: Done   2 out of  20 | elapsed:  1.8min remaining: 16.6min
[Parallel(n_jobs=64)]: Done   3 out of  20 | elapsed:  1.8min remaining: 10.5min
[Parallel(n_jobs=64)]: Done   4 out of  20 | elapsed:  1.9min remaining:  7.4min
[Parallel(n_jobs=64)]: Done   5 out of  20 | elapsed:  1.9min remaining:  5.6min
[Parallel(n_jobs=64)]: Done   6 out of  20 | elapsed:  1.9min remaining:  4.3min
[Parallel(n_jobs=64)]: Done   7 out of  20 | elapsed:  1.9min remaining:  3.5min
[Parallel(n_jobs=64)]: Done   8 out of  20 | elapsed:  1.9min remaining:  2.8min
[Parallel(n_jobs=64)]: Done   9 out of  20 | elapsed:  1.9min remaining:  2.3min
[Parallel(n_jobs=64)]: Done  10 out of  20 | elapsed:  1.9min remaining:  1.9min
[Parallel(n_jobs=64)]: Done  11 out of  20 | elapsed:  1.9min remaining:  1.5min
[Parallel(n_jobs=64)]: Done  12 out of  20 | elapsed:  1.9min remaining:  1.2min
[Parallel(n_jobs=64)]: Done  13 out of  20 | elapsed:  1.9min remaining:  1.0min
[Parallel(n_jobs=64)]: Done  14 out of  20 | elapsed:  1.9min remaining:   48.2s
[Parallel(n_jobs=64)]: Done  15 out of  20 | elapsed:  1.9min remaining:   37.6s
[Parallel(n_jobs=64)]: Done  16 out of  20 | elapsed:  1.9min remaining:   28.2s
[Parallel(n_jobs=64)]: Done  17 out of  20 | elapsed:  1.9min remaining:   20.0s
[Parallel(n_jobs=64)]: Done  18 out of  20 | elapsed:  1.9min remaining:   12.6s
[Parallel(n_jobs=64)]: Done  20 out of  20 | elapsed:  1.9min remaining:    0.0s
[Parallel(n_jobs=64)]: Done  20 out of  20 | elapsed:  1.9min finished
done
tensor([0.5678, 0.5782, 0.5887,  ..., 2.1687, 2.1611, 2.1536],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.5592, 1.5711, 1.5830,  ..., 5.0715, 5.0542, 5.0368],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.0216, 0.0268, 0.0320,  ..., 3.6166, 3.6059, 3.5952],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.5213, 0.5327, 0.5440,  ..., 3.9646, 3.9510, 3.9373],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.2115, -0.2090, -0.2064,  ...,  3.2598,  3.2494,  3.2391],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.5197, 1.5362, 1.5528,  ..., 1.4703, 1.4651, 1.4598],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.3927, 1.3978, 1.4029,  ..., 3.1753, 3.1644, 3.1534],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.4146, 2.4296, 2.4448,  ..., 3.7901, 3.7788, 3.7675],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.9683, 3.9921, 4.0160,  ..., 2.3029, 2.2950, 2.2872],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.0088, 4.0308, 4.0527,  ..., 2.3951, 2.3871, 2.3791],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([11.8428, 11.8834, 11.9238,  ...,  5.2463,  5.2275,  5.2088],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([3.0084, 3.0307, 3.0531,  ..., 3.4706, 3.4586, 3.4466],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.4323, 4.4576, 4.4827,  ..., 6.4090, 6.3892, 6.3693],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.4850, 1.4995, 1.5138,  ..., 2.3491, 2.3414, 2.3337],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.1043, 1.1142, 1.1240,  ..., 4.2902, 4.2766, 4.2629],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([5.8878, 5.9276, 5.9674,  ..., 2.7730, 2.7642, 2.7555],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([1.7915, 1.8111, 1.8308,  ..., 3.6256, 3.6140, 3.6024],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([0.2466, 0.2572, 0.2679,  ..., 6.8579, 6.8351, 6.8123],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([2.5005, 2.5128, 2.5250,  ..., 4.1278, 4.1155, 4.1032],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
tensor([4.2268, 4.2491, 4.2713,  ..., 3.1205, 3.1101, 3.0998],
       dtype=torch.float64)
torch.Size([6801])
<class 'torch.Tensor'>
torch.Size([20, 6])
