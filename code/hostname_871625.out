JobId=871625 JobName=script.sh
   UserId=kanderer29(4373) GroupId=macke(4017) MCS_label=N/A
   Priority=53694 Nice=0 Account=macke QOS=normal
   JobState=RUNNING Reason=None Dependency=(null)
   Requeue=1 Restarts=0 BatchFlag=1 Reboot=0 ExitCode=0:0
   RunTime=00:00:01 TimeLimit=05:00:00 TimeMin=N/A
   SubmitTime=2021-11-24T17:51:28 EligibleTime=2021-11-24T17:51:28
   AccrueTime=2021-11-24T17:51:28
   StartTime=2021-11-24T17:51:28 EndTime=2021-11-24T22:51:28 Deadline=N/A
   PreemptEligibleTime=2021-11-24T17:52:28 PreemptTime=None
   SuspendTime=None SecsPreSuspend=0 LastSchedEval=2021-11-24T17:51:28
   Partition=cpu-short AllocNode:Sid=bg-slurmb-login1:14382
   ReqNodeList=(null) ExcNodeList=(null)
   NodeList=slurm-cpu-hm-3
   BatchHost=slurm-cpu-hm-3
   NumNodes=1 NumCPUs=64 NumTasks=1 CPUs/Task=64 ReqB:S:C:T=0:0:*:*
   TRES=cpu=64,mem=50G,node=1,billing=13
   Socks/Node=* NtasksPerN:B:S:C=0:0:*:* CoreSpec=*
   MinCPUsNode=64 MinMemoryNode=50G MinTmpDiskNode=0
   Features=(null) DelayBoot=00:00:00
   OverSubscribe=OK Contiguous=0 Licenses=(null) Network=(null)
   Command=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/script.sh
   WorkDir=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code
   StdErr=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/hostname_871625.err
   StdIn=/dev/null
   StdOut=/mnt/qb/home/macke/kanderer29/sbi_for_eeg_data/code/hostname_871625.out
   Power=
   MailUser=k.anderer@t-online.de MailType=END

1
1 params are investigated
joblib will run over 1 jobs
Loading custom mechanism files from /home/macke/kanderer29/.conda/envs/sbi_env/lib/python3.7/site-packages/hnn_core/mod/x86_64/.libs/libnrnmech.so
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
1
1 params are investigated
joblib will run over 1 jobs
Building the NEURON model
[Done]
running trial 1 on 1 cores
Simulation time: 0.03 ms...
Simulation time: 10.0 ms...
Simulation time: 20.0 ms...
Simulation time: 30.0 ms...
Simulation time: 40.0 ms...
Simulation time: 50.0 ms...
Simulation time: 60.0 ms...
Simulation time: 70.0 ms...
Simulation time: 80.0 ms...
Simulation time: 90.0 ms...
Simulation time: 100.0 ms...
Simulation time: 110.0 ms...
Simulation time: 120.0 ms...
Simulation time: 130.0 ms...
Simulation time: 140.0 ms...
Simulation time: 150.0 ms...
Simulation time: 160.0 ms...
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1671, -9.1392, -9.1113])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0693, -9.0434, -9.0176])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1351, -9.1061, -9.0770])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -4.6970, -4.6802, -4.6635])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0945, -8.0710, -8.0474])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.8445, -7.8191, -7.7937])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.5235, -5.5081, -5.4926])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.3182, -10.2868, -10.2554])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2569, -9.2275, -9.1980])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.5422, -6.5176, -6.4931])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.0811, -7.0584, -7.0357])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -3.5289, -3.5084, -3.4880])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.3988, -10.3672, -10.3355])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2991, -7.2744, -7.2498])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.9425, -9.9125, -9.8826])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.7232, -8.6951, -8.6671])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.6329, -10.6021, -10.5714])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.3150, -7.2914, -7.2677])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.3773, -8.3523, -8.3274])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.9455, -6.9232, -6.9009])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.7198, -5.6997, -5.6796])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.2291, -8.2027, -8.1763])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2974, -7.2760, -7.2546])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1680, -9.1386, -9.1092])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.6840, -7.6614, -7.6387])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3356, -9.3075, -9.2793])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2604, -10.2277, -10.1949])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.5986, -7.5758, -7.5529])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0205, -8.9915, -8.9626])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4077, -9.3815, -9.3553])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0688, -8.0489, -8.0289])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2165, -9.1868, -9.1571])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.6989, -9.6680, -9.6370])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.0525, -10.0224,  -9.9924])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0067, -8.9808, -8.9548])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2863, -10.2534, -10.2204])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.3670, -6.3466, -6.3262])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2914, -5.2747, -5.2580])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.7122, -8.6871, -8.6621])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.2389,  0.2350,  0.2311])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.1094, -7.0867, -7.0640])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -3.9979, -3.9853, -3.9727])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.7982, -9.7667, -9.7353])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3063, -9.2790, -9.2517])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.5605, -7.5364, -7.5123])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.0685, -7.0476, -7.0266])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.9047, -8.8760, -8.8472])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.2471, -8.2206, -8.1940])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2938, -5.2808, -5.2679])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.7520, -6.7302, -6.7084])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4574, -8.4302, -8.4030])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.6330, -8.6051, -8.5772])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -2.9915, -2.9864, -2.9812])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.1697, -7.1468, -7.1238])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.0318, -10.9996, -10.9674])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.5636, -10.5321, -10.5005])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3289, -9.3016, -9.2743])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.1885, -8.1605, -8.1326])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2626, -7.2392, -7.2158])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4269, -8.4023, -8.3777])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1935, -9.1680, -9.1425])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.1613, -5.1444, -5.1276])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.8971, -5.8755, -5.8540])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.8050, -9.7736, -9.7421])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.7044, -7.6831, -7.6617])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.6026, -6.5826, -6.5626])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.0855, -11.0526, -11.0197])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4282, -8.4013, -8.3744])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.7005, -10.6752, -10.6497])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.7401, -11.7041, -11.6680])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2760, -10.2436, -10.2112])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., 15.5498, 15.4968, 15.4437])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0294, -8.0054, -7.9814])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0423, -9.0142, -8.9860])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4437, -8.4185, -8.3933])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.4841, -7.4623, -7.4405])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.0393, -10.0086,  -9.9780])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., 12.3789, 12.3499, 12.3207])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2306, -7.2075, -7.1843])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.3664, -7.3412, -7.3161])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.7202, -7.6979, -7.6756])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.8861, -10.8534, -10.8206])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9645, -10.9316, -10.8987])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9320, -10.8989, -10.8657])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2082, -5.1927, -5.1773])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1855, -9.1561, -9.1266])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.4603, -6.4430, -6.4258])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2560, -9.2299, -9.2038])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4979, -9.4715, -9.4450])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9092, -10.8761, -10.8429])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  4.7992,  4.7839,  4.7687])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.9710, -7.9498, -7.9286])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.4043,  0.4036,  0.4028])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.8761, -6.8595, -6.8428])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.9154, -8.8871, -8.8588])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.7536, -10.7219, -10.6903])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4654, -9.4351, -9.4048])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.9583, -9.9292, -9.9002])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0564, -9.0328, -9.0092])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.4170,  0.4356,  0.4541])
torch.Size([6801])
<class 'torch.Tensor'>
torch.Size([100, 6])
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Neural network successfully converged after 122 epochs.
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1671, -9.1392, -9.1113])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0693, -9.0434, -9.0176])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1351, -9.1061, -9.0770])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -4.6970, -4.6802, -4.6635])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0945, -8.0710, -8.0474])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.8445, -7.8191, -7.7937])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.5235, -5.5081, -5.4926])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.3182, -10.2868, -10.2554])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2569, -9.2275, -9.1980])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.5422, -6.5176, -6.4931])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.0811, -7.0584, -7.0357])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -3.5289, -3.5084, -3.4880])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.3988, -10.3672, -10.3355])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2991, -7.2744, -7.2498])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.9425, -9.9125, -9.8826])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.7232, -8.6951, -8.6671])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.6329, -10.6021, -10.5714])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.3150, -7.2914, -7.2677])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.3773, -8.3523, -8.3274])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.9455, -6.9232, -6.9009])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.7198, -5.6997, -5.6796])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.2291, -8.2027, -8.1763])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2974, -7.2760, -7.2546])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1680, -9.1386, -9.1092])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.6840, -7.6614, -7.6387])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3356, -9.3075, -9.2793])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2604, -10.2277, -10.1949])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.5986, -7.5758, -7.5529])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0205, -8.9915, -8.9626])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4077, -9.3815, -9.3553])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0688, -8.0489, -8.0289])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2165, -9.1868, -9.1571])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.6989, -9.6680, -9.6370])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.0525, -10.0224,  -9.9924])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0067, -8.9808, -8.9548])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2863, -10.2534, -10.2204])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.3670, -6.3466, -6.3262])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2914, -5.2747, -5.2580])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.7122, -8.6871, -8.6621])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.2389,  0.2350,  0.2311])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.1094, -7.0867, -7.0640])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -3.9979, -3.9853, -3.9727])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.7982, -9.7667, -9.7353])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3063, -9.2790, -9.2517])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.5605, -7.5364, -7.5123])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.0685, -7.0476, -7.0266])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.9047, -8.8760, -8.8472])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.2471, -8.2206, -8.1940])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2938, -5.2808, -5.2679])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.7520, -6.7302, -6.7084])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4574, -8.4302, -8.4030])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.6330, -8.6051, -8.5772])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -2.9915, -2.9864, -2.9812])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.1697, -7.1468, -7.1238])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.0318, -10.9996, -10.9674])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.5636, -10.5321, -10.5005])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.3289, -9.3016, -9.2743])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.1885, -8.1605, -8.1326])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2626, -7.2392, -7.2158])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4269, -8.4023, -8.3777])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1935, -9.1680, -9.1425])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.1613, -5.1444, -5.1276])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.8971, -5.8755, -5.8540])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.8050, -9.7736, -9.7421])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.7044, -7.6831, -7.6617])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.6026, -6.5826, -6.5626])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.0855, -11.0526, -11.0197])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4282, -8.4013, -8.3744])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.7005, -10.6752, -10.6497])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -11.7401, -11.7041, -11.6680])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.2760, -10.2436, -10.2112])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., 15.5498, 15.4968, 15.4437])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.0294, -8.0054, -7.9814])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0423, -9.0142, -8.9860])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.4437, -8.4185, -8.3933])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.4841, -7.4623, -7.4405])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.0393, -10.0086,  -9.9780])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., 12.3789, 12.3499, 12.3207])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.2306, -7.2075, -7.1843])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.3664, -7.3412, -7.3161])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.7202, -7.6979, -7.6756])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.8861, -10.8534, -10.8206])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9645, -10.9316, -10.8987])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9320, -10.8989, -10.8657])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -5.2082, -5.1927, -5.1773])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.1855, -9.1561, -9.1266])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.4603, -6.4430, -6.4258])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.2560, -9.2299, -9.2038])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4979, -9.4715, -9.4450])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.9092, -10.8761, -10.8429])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  4.7992,  4.7839,  4.7687])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -7.9710, -7.9498, -7.9286])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.4043,  0.4036,  0.4028])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -6.8761, -6.8595, -6.8428])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -8.9154, -8.8871, -8.8588])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([ -0.5976,  -0.5984,  -0.5992,  ..., -10.7536, -10.7219, -10.6903])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.4654, -9.4351, -9.4048])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.9583, -9.9292, -9.9002])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ..., -9.0564, -9.0328, -9.0092])
torch.Size([6801])
<class 'torch.Tensor'>
tensor([-0.5976, -0.5984, -0.5992,  ...,  0.4170,  0.4356,  0.4541])
torch.Size([6801])
<class 'torch.Tensor'>
sum stats <class 'torch.Tensor'>
tensor([[5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00],
        [5.7475e-01, 2.0990e+03, 0.0000e+00]])
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained: 